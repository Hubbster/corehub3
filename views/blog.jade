block vars
  - var bodyClass = 'blog'
  - var useFooter = false

extend template/default 
append main
  article.blogpost
    h1 Article Heading
    h2 These override some of the styles specified in themand partials in <a href="//bitters.bourbon.io">Bitters</a>. You can replace the typography variables and the header font specifications in Bitters with these styles. Then you won&rsquo;t need the wrapping class.
    p.date 30 Mar 2014
    p
      <span>Lorem ipsum dolor sit amet</span>, consectetur adipisicing elit. Consequatur a, ullam, voluptatum incidunt neque doloremque vel inventore distinctio laudantium harum</a> illo quam nulla dolor alias iure impedit! Accusamus! Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus! Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequatur, a, ullam, voluptatum incidunt neque porro numquam doloremque vel inventore distinctio laudantium harum illo quam nulla dolor alias iure impedit.
      <a href="javascript:void(0)" class="read-more">Read More <span>&rsaquo;</span></a>
    h3 Subheading lorem
    p <span>Consequatur ullam, voluptatum</span> incidunt neque porro numquam doloremque vel inventore distinctio laudantium harum illo quam nulla dolor alias iure impedit. Accusamus. Consequatur, a, ullam, voluptatum incidunt neque porro numquam doloremque vel inventore distinctio laudantium harum illo quam nulla dolor alias iure impedit! Accusamus.</p>
    hr
    p.author Author Name
    button#edit-this-content Redigera

    .markdowneditor
      .toolbar.wmd-panel
        #wmd-button-bar
        .right
          button#close Avbryt
          button#close Spara och stäng
      .content
        .in
          textarea#wmd-input.wmd-input(placeholder='Skriv in din text här')
        .out
          #wmd-preview.wmd-panel.wmd-preview

append scripts
  script(src='public/js/vendor/pagedown/Markdown.Converter.js')
  script(src='public/js/vendor/pagedown/Markdown.Editor.js')
  script(src='public/js/vendor/pagedown/Markdown.Sanitizer.js')
  script.
    var converter1 = Markdown.getSanitizingConverter();
                   
    converter1.hooks.chain("preBlockGamut", function (text, rbg) {
        return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
            return "<blockquote>" + rbg(inner) + "</blockquote>\n";
        });
    });
   
    var editor1 = new Markdown.Editor(converter1);
   
    editor1.run();
